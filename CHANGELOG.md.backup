# Registro de Cambios# Changelog



Todos los cambios notables en este proyecto ser√°n documentados en este archivo.Todos los cambios notables de este proyecto ser√°n documentados en este archivo.



El formato est√° basado en [Keep a Changelog](https://keepachangelog.com/es/1.0.0/),El formato est√° basado en [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),

y este proyecto adhiere a [Versionado Sem√°ntico](https://semver.org/lang/es/).y este proyecto adhiere a [Semantic Versioning](https://semver.org/spec/v2.0.0.html).



## [1.0.0] - 2025-10-12## [Unreleased]



### üéâ OPTIMIZACI√ìN Y LIMPIEZA COMPLETA DEL PROYECTO### En progreso

- Ordenamiento QR para clientes (M6)

#### ‚ôªÔ∏è Optimizado- Mejoras de performance en stores

- Optimizaci√≥n de WebSocket reconnection

**C√≥digo TypeScript**

- Eliminados m√°s de 80 usos de `any` con tipos apropiados### Fixed

- Corregidos todos los imports sin uso- Todos los tests de payment-store pasando (14/14)

- Eliminadas variables declaradas pero no utilizadas- Eliminados console.logs en producci√≥n (34 instancias)

- Mejorada la inferencia de tipos en toda la aplicaci√≥n- File I/O en payment-store con creaci√≥n autom√°tica de directorios

- Agregadas interfaces expl√≠citas para mejorar el mantenimiento

### Added

**Configuraci√≥n de ESLint**- Sistema de logging estructurado (`lib/logger.ts`)

- Reglas actualizadas para mejor experiencia de desarrollo- Niveles de log apropiados: debug, info, warn, error

- Configuraci√≥n de warnings vs errors m√°s pragm√°tica- Contexto estructurado en todos los logs

- Soporte para patterns comunes (variables con `_`)- Test utilities en `lib/server/__tests__/setup.ts`

- Mejor balance entre estricto y pr√°ctico- Documentaci√≥n completa de resoluci√≥n de deuda t√©cnica



**Estructura del Proyecto**### Changed

- Reorganizada documentaci√≥n en carpeta `/docs`- Migrado todo el logging de stores a sistema estructurado

- Archivos temporales y de auditor√≠a movidos a `/docs/archive`- payment-store, order-store, table-store, menu-store, mercadopago-provider

- Estructura m√°s clara y profesional- Tests de payment-store completamente reescritos con mejor aislamiento

- Eliminados archivos duplicados y obsoletos- Logger config con soporte para desarrollo y producci√≥n



**package.json**---

- Nombre actualizado: `restaurant-management-system`

- Versi√≥n actualizada a `1.0.0`## [0.5.0] - 2025-01-09

- Mejor organizaci√≥n de scripts

### M5 - Integraci√≥n de Pagos (MercadoPago)

#### üìö Documentaci√≥n

#### Added

**README Principal**- **Payment Integration**

- Completamente reescrito en espa√±ol  - MercadoPago payment provider con Checkout Pro

- Informaci√≥n actualizada sobre el stack tecnol√≥gico  - `PaymentStore` para gesti√≥n de pagos con persistencia en archivo

- Gu√≠as de instalaci√≥n mejoradas  - `PaymentService` para l√≥gica de negocio de pagos

- Secci√≥n de internacionalizaci√≥n agregada  - API endpoints: `/api/payment` (GET, POST), `/api/payment/[id]` (GET)

- Badges actualizados  - Webhook endpoint: `/api/webhook/mercadopago` con signature validation

- Estructura m√°s clara y profesional

- **Frontend Components**

**CHANGELOG**  - `CheckoutButton` - Bot√≥n de pago integrado con loading states

- Traducido completamente al espa√±ol  - `PaymentModal` - Modal de checkout con redirecci√≥n a MercadoPago

- Historial completo de cambios desde M1 hasta M6  - Payment result pages: `/payment/success`, `/payment/failure`, `/payment/pending`

- Formato consistente y f√°cil de leer  - `usePayment` hook para gesti√≥n de estado de pagos

- Notas de versi√≥n agregadas

- **Real-time Updates**

**Organizaci√≥n de Docs**  - Eventos WebSocket para actualizaciones de pagos: `payment:created`, `payment:updated`

- Archivos `.md` de ra√≠z movidos a `/docs`  - Sincronizaci√≥n autom√°tica del estado de pagos en UI

- Categorizaci√≥n por tipo (setup, features, architecture, etc.)

- Archivos obsoletos archivados- **Documentation**

- √çndice mejorado  - API documentation: `docs/api/payments.md`

  - Payment flow diagram: `docs/diagrams/payment-flow.md`

#### üåç Internacionalizaci√≥n  - Setup guide para MercadoPago

  - PR checklist espec√≠fico de pagos

**Sistema Completo en Espa√±ol**

- README y toda la documentaci√≥n principal#### Changed

- CHANGELOG y notas de versi√≥n- `OrdersPanel` ahora incluye bot√≥n de pago para pedidos pendientes

- Comentarios en el c√≥digo actualizados- WebSocket event types extendidos con eventos de pagos

- Nombres de variables y funciones descriptivos en espa√±ol donde aplica- `order-service.ts` actualizado con l√≥gica de transici√≥n de estados

- Mensajes de commit y gu√≠as de contribuci√≥n

#### Fixed

#### üîß Configuraci√≥n- Type safety en payment-related types (eliminaci√≥n de `any`)

- Error handling mejorado en payment flows

**ESLint**- Validaci√≥n de webhooks de MercadoPago

- Reglas m√°s permisivas para desarrollo

- Warnings en lugar de errors para algunos casos#### Security

- Mejor experiencia con shadcn/ui components- Webhook signature validation implementada

- Configuraci√≥n para trabajo con Next.js 14- Secrets movidos a variables de entorno

- No se exponen access tokens en frontend

#### üêõ Corregido

---

**TypeScript**

- Tipos corregidos en `lib/api-helpers.ts`## [0.4.0] - 2024-12-XX

- Tipos mejorados en `app/api/auth/login/route.ts`

- Tipos mejorados en `app/api/auth/register/route.ts`### M4 - Analytics y Reportes

- Tipos para respuestas de Supabase

- Eliminaci√≥n de casteos inseguros#### Added

- Dashboard de analytics con m√©tricas clave

**Imports y Exports**- API endpoint `/api/analytics/covers` para datos de ocupaci√≥n

- Eliminados imports sin uso en toda la aplicaci√≥n- Componente `AnalyticsDashboard` con gr√°ficos interactivos

- Corregidos warnings de React Hooks- Filtros por rango de fecha

- Limpieza de dependencias circulares- M√©tricas: ocupaci√≥n promedio, tiempo de rotaci√≥n, revenue



#### üìù Cambiado#### Changed

- Sidebar navigation actualizado con secci√≥n de Anal√≠tica

**Estructura de Archivos**- `table-store` extendido con tracking de covers

```

Antes:---

- 20+ archivos .md en la ra√≠z

- Documentaci√≥n dispersa## [0.3.0] - 2024-11-XX

- Archivos de debug mezclados

### M3 - Sistema de Pedidos

Despu√©s:

- Solo README, CHANGELOG y CONTRIBUTING en ra√≠z#### Added

- Documentaci√≥n organizada en /docs- **Orders Management**

- Archivos temporales en /docs/archive  - `OrderStore` con persistencia y validaciones

- Estructura profesional y mantenible  - API endpoint `/api/order` (GET, POST, PATCH)

```  - Order status workflow: pendiente ‚Üí preparando ‚Üí servido ‚Üí completado

  - Validaci√≥n de stock

**Configuraci√≥n del Proyecto**  - C√°lculo autom√°tico de totales, descuentos, propinas, impuestos

- `.eslintrc.json` actualizado con reglas pragm√°ticas

- `package.json` con nombre descriptivo- **Frontend Components**

- Configuraci√≥n lista para producci√≥n  - `OrdersPanel` - Panel principal de gesti√≥n de pedidos

  - `OrderForm` - Formulario de creaci√≥n de pedidos

---  - Real-time order updates via WebSocket



## [0.6.0] - 2025-01-10- **Menu Integration**

  - API endpoints `/api/menu/*` para gesti√≥n de men√∫

### M6 - Sistema de Pedidos por QR  - `MenuStore` con categor√≠as, items, allergens

  - Stock management

#### ‚ú® Agregado

#### Changed

**Funcionalidad QR para Clientes**- WebSocket events extendidos: `order:created`, `order:updated`, `order:status_changed`

- Sistema completo de pedidos por c√≥digo QR- Table states sincronizados con pedidos

- Interfaz p√∫blica sin autenticaci√≥n requerida

- Carrito de compras persistente en localStorage#### Tests

- Validaci√≥n de sesiones de mesa- Suite completo de tests para orders API (17 tests)

- Confirmaci√≥n de pedidos con resumen- Tests de validaci√≥n de payload

- Tests de transiciones de estado

**Componentes P√∫blicos**- Tests de integraci√≥n con mesas

- P√°gina de escaneo QR `/qr/[tableId]`

- Formulario de checkout para clientes---

- Modal de personalizaci√≥n de items

- P√°gina de confirmaci√≥n de pedido## [0.2.0] - 2024-10-XX

- Validaci√≥n de token QR

### M2 - Gesti√≥n de Mesas

**APIs**

- `/api/qr/validate` - Validaci√≥n de tokens QR#### Added

- `/api/order/qr` - Creaci√≥n de pedidos desde QR- **Table Management**

- Sistema de sesiones para mesas  - `TableStore` con state machine para transiciones

  - API endpoints `/api/tables/*` para CRUD de mesas

#### üîí Seguridad  - Table layout editor con drag & drop

- Validaci√≥n de tokens QR  - Estados de mesa: libre ‚Üí reservada ‚Üí ocupada ‚Üí cuenta_solicitada ‚Üí pagando ‚Üí libre

- Expiraci√≥n de sesiones

- Sanitizaci√≥n de datos de cliente- **Components**

- Rate limiting en endpoints p√∫blicos  - `TableList` - Lista de mesas con filtros

  - `TableMap` - Vista visual del sal√≥n

---  - `SalonLiveView` - Vista en tiempo real del sal√≥n

  - Editor de layout de mesas

## [0.5.0] - 2025-01-09

- **Real-time Features**

### M5 - Integraci√≥n de Pagos (MercadoPago)  - WebSocket integration para actualizaciones en tiempo real

  - Eventos: `table:created`, `table:updated`, `table:state_changed`

#### ‚ú® Agregado

#### Tests

**Integraci√≥n de Pagos**- Tests de table API (4 tests)

- Integraci√≥n completa con MercadoPago Checkout Pro- Tests de state transitions

- `PaymentStore` para gesti√≥n de pagos con persistencia- Tests de table layout

- `PaymentService` para l√≥gica de negocio

- Endpoints de API: `/api/payment/*`---

- Webhook de MercadoPago con validaci√≥n de firma

## [0.1.0] - 2024-09-XX

**Componentes Frontend**

- `CheckoutButton` - Bot√≥n de pago con estados de carga### M1 - Estructura Base

- `PaymentModal` - Modal de checkout

- P√°ginas de resultado: success, failure, pending#### Added

- Hook `usePayment` para gesti√≥n de estado- **Project Setup**

  - Next.js 14.2 con App Router

**Actualizaciones en Tiempo Real**  - TypeScript 5 con strict mode

- Eventos WebSocket para pagos: `payment:created`, `payment:updated`  - Tailwind CSS + shadcn/ui components

- Sincronizaci√≥n autom√°tica del estado de pagos  - Vitest + React Testing Library setup

  - ESLint configuration

#### üìö Documentaci√≥n

- Documentaci√≥n de API de pagos- **Authentication**

- Diagrama de flujo de pagos  - `AuthContext` para gesti√≥n de sesi√≥n

- Gu√≠a de configuraci√≥n de MercadoPago  - `ProtectedRoute` component

  - Login page con mock authentication

#### üîí Seguridad  - Middleware para protecci√≥n de rutas

- Validaci√≥n de firma de webhook

- Secrets en variables de entorno- **Core Components**

- Tokens no expuestos en frontend  - `DashboardLayout` - Layout principal con sidebar

  - `SidebarNav` - Navegaci√≥n lateral

---  - `LoadingSpinner` - Componente de carga

  - `ErrorBoundary` - Manejo de errores

## [0.4.0] - 2024-12-XX

- **Infrastructure**

### M4 - Anal√≠ticas y Reportes  - Socket.io integration setup

  - Mock data utilities

#### ‚ú® Agregado  - Basic routing structure

  - Global styles y theme

**Dashboard de Anal√≠ticas**

- M√©tricas clave de ocupaci√≥n y ventas#### Documentation

- API endpoint `/api/analytics/covers`- PROJECT_GUIDELINES.md

- Componente `AnalyticsDashboard` con gr√°ficos- PROJECT_OVERVIEW.md

- Filtros por rango de fechas- AGENTS.md para GitHub Copilot

- M√©tricas: ocupaci√≥n promedio, tiempo de rotaci√≥n, ingresos

---

**Visualizaciones**

- Gr√°ficos interactivos con recharts## Leyenda

- Datos en tiempo real

- Comparativas por per√≠odos- `Added` - Nuevas funcionalidades

- `Changed` - Cambios en funcionalidades existentes

---- `Deprecated` - Funcionalidades que ser√°n removidas

- `Removed` - Funcionalidades removidas

## [0.3.0] - 2024-11-XX- `Fixed` - Bug fixes

- `Security` - Mejoras de seguridad

### M3 - Sistema de Pedidos- `Tests` - Adiciones o cambios en tests



#### ‚ú® Agregado---



**Gesti√≥n de Pedidos****Formato de versiones**: MAJOR.MINOR.PATCH

- `OrderStore` con persistencia y validaciones- **MAJOR**: Cambios incompatibles de API

- API endpoint `/api/order` (GET, POST, PATCH)- **MINOR**: Nuevas funcionalidades (backwards compatible)

- Flujo de estados: pendiente ‚Üí preparando ‚Üí servido ‚Üí completado- **PATCH**: Bug fixes (backwards compatible)

- Validaci√≥n de stock
- C√°lculo autom√°tico de totales

**Componentes Frontend**
- `OrdersPanel` - Panel principal de pedidos
- `OrderForm` - Formulario de creaci√≥n
- Actualizaciones en tiempo real via WebSocket

**Integraci√≥n de Men√∫**
- Endpoints `/api/menu/*` para gesti√≥n de men√∫
- `MenuStore` con categor√≠as e items
- Gesti√≥n de stock

#### üß™ Tests
- Suite completa de tests para API de pedidos (17 tests)
- Tests de validaci√≥n de payload
- Tests de transiciones de estado

---

## [0.2.0] - 2024-10-XX

### M2 - Gesti√≥n de Mesas

#### ‚ú® Agregado

**Gesti√≥n de Mesas**
- `TableStore` con m√°quina de estados
- API endpoints `/api/tables/*` para CRUD
- Editor de layout con drag & drop
- Estados: libre ‚Üí reservada ‚Üí ocupada ‚Üí cuenta_solicitada ‚Üí pagando ‚Üí libre

**Componentes**
- `TableList` - Lista de mesas con filtros
- `TableMap` - Vista visual del sal√≥n
- `SalonLiveView` - Vista en tiempo real
- Editor de layout de mesas

**Funcionalidad en Tiempo Real**
- Integraci√≥n WebSocket para actualizaciones
- Eventos: `table:created`, `table:updated`, `table:state_changed`

---

## [0.1.0] - 2024-09-XX

### M1 - Estructura Base y Autenticaci√≥n

#### ‚ú® Agregado

**Configuraci√≥n del Proyecto**
- Next.js 14.2 con App Router
- TypeScript 5 con modo estricto
- Tailwind CSS + componentes shadcn/ui
- Configuraci√≥n de Vitest + React Testing Library
- Integraci√≥n con Supabase

**Autenticaci√≥n**
- Integraci√≥n con Supabase Auth
- `AuthContext` para gesti√≥n de sesi√≥n
- Componente `ProtectedRoute`
- P√°gina de login y registro
- Middleware para protecci√≥n de rutas

**Componentes Core**
- `DashboardLayout` - Layout principal con sidebar
- `SidebarNav` - Navegaci√≥n lateral
- `LoadingSpinner` - Componente de carga
- `ErrorBoundary` - Manejo de errores
- Sistema de temas claro/oscuro

**Infraestructura**
- Configuraci√≥n de WebSocket
- Utilidades de datos mock
- Estructura b√°sica de rutas
- Estilos globales y tema

---

## Leyenda

- ‚ú® **Agregado** - Nuevas funcionalidades
- üìù **Cambiado** - Cambios en funcionalidades existentes
- üóëÔ∏è **Deprecado** - Funcionalidades que ser√°n removidas
- ‚ùå **Removido** - Funcionalidades removidas
- üêõ **Corregido** - Correcci√≥n de bugs
- üîí **Seguridad** - Mejoras de seguridad
- üß™ **Tests** - Adiciones o cambios en tests
- ‚ôªÔ∏è **Optimizado** - Mejoras de performance o c√≥digo
- üìö **Documentaci√≥n** - Cambios en documentaci√≥n
- üåç **Internacionalizaci√≥n** - Cambios de idioma o localizaci√≥n

---

**Formato de Versiones**: MAJOR.MINOR.PATCH
- **MAJOR**: Cambios incompatibles de API
- **MINOR**: Nuevas funcionalidades (compatible con versiones anteriores)
- **PATCH**: Correcciones de bugs (compatible con versiones anteriores)

---

**Mantenedor:** √Ålvaro (@AlvaFG)  
**Repositorio:** [restaurant-digital](https://github.com/AlvaFG/restaurant-digital)  
**Licencia:** MIT
